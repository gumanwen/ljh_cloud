apply plugin: 'java'
apply plugin: 'idea'
version = '1.0'

buildscript {
    //配置常量
    ext{
        springBootVersion = '2.3.5.RELEASE'
        springBootActuator = '2.3.5.RELEASE'
        springCloudVersion = 'Hoxton.SR9'
        junitVersion = '4.12'
    }
    //配置仓库
    repositories{
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

//配置所有项目公共内容
configure(allprojects) {
    //配置项目信息
    group 'com.yaobanTech'
    version '1.0-SNAPSHOT'
    //指定需要的插件
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'

    //配置仓库
    repositories{
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
    }
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    //配置字符编码
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

//配置子工程
configure(subprojects) {
    //dependency-management 插件
    apply plugin: 'io.spring.dependency-management'
    //依赖信息管理
    dependencyManagement {
        imports {
            //spring bom helps us to declare dependencies without specifying version numbers.
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.boot:spring-boot-starter-actuator:${springBootActuator}"
        }
    }
    //子工程实际会下载的依赖
    dependencies {
        //springcloudgateway的内部是通过netty+webflux实现的，webflux实现和springmvc配置依赖冲突。
        //implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.1.2'
        implementation group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.3.5.RELEASE'
        implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '7.4.1.jre8'
        compile group: 'com.alibaba.cloud', name: 'spring-cloud-starter-alibaba-nacos-discovery', version: '2.2.1.RELEASE'
        // https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-config
        compile group: 'com.alibaba.cloud', name: 'spring-cloud-starter-alibaba-nacos-config', version: '2.2.1.RELEASE'
        // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.2.5.RELEASE'
        // https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter
        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.3.5.RELEASE'
        // https://mvnrepository.com/artifact/junit/junit
        testCompile group: 'junit', name: 'junit', version: '4.12'
        // https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
        compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
        // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
        compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
        // https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-alibaba-seata
        compile group: 'com.alibaba.cloud', name: 'spring-cloud-alibaba-seata', version: '2.1.0.RELEASE'
        // https://mvnrepository.com/artifact/io.seata/seata-server
        compile group: 'io.seata', name: 'seata-server', version: '0.7.1'
    }
    jar {
        manifest.attributes provider: 'gradle'
    }

}

// 将依赖包复制到lib目录
task copyJar(type: Copy) {
    // 清除现有的lib目录
    delete "$buildDir\\libs\\lib"
    from configurations.compileClasspath
    into "$buildDir\\libs\\lib"
}

// 拷贝配置文件
task copyConfigFile(type: Copy) {
    // 清除现有的配置目录
    delete "$buildDir\\libs\\config"
    from('src/main/resources')
    into 'build/libs/config'
}

// 配置bootJar进行打包
bootJar {
    // jar包名称，默认是settings.gradle下的工程名 rootProject.name = 'alog-server'
    baseName = 'alog-server'
    // jar包版本号
    version =  '0.0.1'
    // 排除所有的jar
    excludes = ["*.jar"]
    // lib目录的清除和复制任务
    dependsOn copyJar
    // 配置目录的清除和复制任务
    dependsOn copyConfigFile

    // 指定依赖包的路径
    manifest {
        attributes "Manifest-Version": 1.0,
                'Class-Path': configurations.compileClasspath.files.collect { "lib/$it.name" }.join(' ')
    }
}